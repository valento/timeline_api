{"version":3,"sources":["../../di/di.js"],"names":["initDI","mediator","serverSettings","dbSettings","database","once","on","container","register","db","emit","console","log","err","connect"],"mappings":";;;;;;;AAAA;;AAEA;;AAEO,IAAMA,0BAAS,SAATA,MAAS,OAAyCC,QAAzC,EAAsD;AAAA,MAAnDC,cAAmD,QAAnDA,cAAmD;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;;;AAE1EH,WAASI,IAAT,CAAc,MAAd,EAAsB,YAAM;AAC5B;AACEJ,aAASK,EAAT,CAAY,UAAZ,EAAwB,cAAM;AAC5B,UAAMC,YAAY,8BAAlB;;AAEAA,gBAAUC,QAAV,CAAmB;AACjBJ,kBAAU,qBAAQK,EAAR,CADO;AAEjBP,wBAAgB,qBAAQA,cAAR;AAFC,OAAnB;;AAKAD,eAASS,IAAT,CAAc,UAAd,EAA0BH,SAA1B;AACD,KATD;;AAWF;AACEN,aAASK,EAAT,CAAY,UAAZ,EAAwB,eAAO;AAC7BK,cAAQC,GAAR,CAAY,gBAAZ,EAA6BC,GAA7B;AACAZ,eAASS,IAAT,CAAc,UAAd;AACD,KAHD;;AAKF;AACEN,aAASU,OAAT,CAAkBX,UAAlB,EAA6BF,QAA7B;;AAEF;AACEA,aAASS,IAAT,CAAc,YAAd;AACD,GAxBD;AA2BD,CA7BM","file":"di.js","sourcesContent":["import { createContainer,asValue } from 'awilix'\r\n\r\n// CREATE DEPENDENCIES Object: db,models,services:\r\n\r\nexport const initDI = ({ serverSettings,dbSettings,database }, mediator) => {\r\n\r\n  mediator.once('init', () => {\r\n  // create dependencies Container object:\r\n    mediator.on('db.ready', db => {\r\n      const container = createContainer()\r\n\r\n      container.register({\r\n        database: asValue(db),\r\n        serverSettings: asValue(serverSettings)\r\n      })\r\n\r\n      mediator.emit('di.ready', container)\r\n    })\r\n\r\n  // DB error handling:\r\n    mediator.on('db.error', err => {\r\n      console.log('DB not ready: ',err)\r\n      mediator.emit('di.error')\r\n    })\r\n\r\n  // CONNECT MYSQL DB:\r\n    database.connect( dbSettings,mediator )\r\n\r\n  // Initiate reboot -> DB createsPool:\r\n    mediator.emit('boot.ready')\r\n  })\r\n\r\n\r\n}\r\n"]}