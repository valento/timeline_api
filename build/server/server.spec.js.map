{"version":3,"sources":["../../src/server/server.spec.js"],"names":["describe","test","expect","server","start","rejects","toThrow"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAEhC;AACA;AACE;AACA;AACA;AACF;AACEC,EAAAA,IAAI,CAAC,mDAAD,EAAsD,YAAM;AAC9D,WAAOC,MAAM,CAACC,kBAAOC,KAAP,CAAa,EAAb,CAAD,CAAN,CAAyBC,OAAzB,CAAiCC,OAAjC,CAAyC,WAAzC,CAAP;AACD,GAFG,CAAJ;AAGAL,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAM;AACnD,WAAOC,MAAM,CAACC,kBAAOC,KAAP,CAAa,6BAAgB,EAAhB,CAAb,CAAD,CAAN,CAA0CC,OAA1C,CAAkDC,OAAlD,CAA0D,iCAA1D,CAAP;AACD,GAFG,CAAJ;AAID,CAfO,CAAR","sourcesContent":["import should from 'should'\r\nimport server from './index.js'\r\nimport { createContainer } from 'awilix'\r\n\r\ndescribe('Server reboot', () => {\r\n\r\n// test serverSettings:\r\n// with should:\r\n  //it('container.resolve must be a function to start', () => {\r\n  //  return server.start({}).should.be.rejectedWith(Error)\r\n  //})\r\n// with jest:\r\n  test('Without Dependency Container must exit with error', () => {\r\n    return expect(server.start({})).rejects.toThrow(/CONTAINER/)\r\n  })\r\n  test('Missing Repo/Port must exit with error', () => {\r\n    return expect(server.start(createContainer({}))).rejects.toThrow(/(serverSettings|repo|REPO|PORT)/)\r\n  })\r\n\r\n})\r\n"],"file":"server.spec.js"}