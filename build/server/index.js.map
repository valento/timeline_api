{"version":3,"sources":["../../src/server/index.js"],"names":["start","container","Promise","resolve","reject","Error","repo","port","app","use","bodyparser","json","express","urlencoded","extended","req","res","next","header","err","promise","createScope","tmlnAPI","_api","tmln_api","bind","usrAPI","usr_api","status","error","global","message","server","listen","Object","assign"],"mappings":"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","sourcesContent":["import express from 'express'\r\nimport bodyparser from 'body-parser'\r\nimport morgan from 'morgan'\r\nimport helmet from 'helmet'\r\nimport createError from 'http-errors'\r\n\r\nimport { promiseWraper } from './middleware/index.js'\r\nimport _api from '../api/index.js'\r\n\r\nconst start = (container) => {\r\n  return new Promise( (resolve,reject) => {\r\n  // Check for DI:\r\n    if(typeof container.resolve !== 'function') {\r\n      reject(new Error('CONTAINER missing ...'))\r\n    }\r\n    const repo = container.resolve('repo')\r\n    const { port } = container.resolve('serverSettings')\r\n\r\n    if(!repo){\r\n      reject(new Error('REPO is missing ...'))\r\n    }\r\n    if(!port){\r\n      reject(new Error('PORT is missing ...'))\r\n    }\r\n\r\n// ======================================================\r\n// Express App Server:\r\n\r\n    const app = express()\r\n    //app.use(bodyparser.urlencoded({ extended: true }))\r\n    app.use(bodyparser.json())\r\n    app.use(express.urlencoded({ extended: true } ))\r\n  // Parse request body:\r\n    app.use(morgan('dev'))\r\n    app.use(helmet())\r\n    app.use((req,res,next) => {\r\n      res.header(\"Access-Control-Allow-Origin\", \"*\") // update to match the domain you will make the request from\r\n      res.header(\"Access-Control-Allow-Headers\", \"Authorization, Origin, X-Requested-With, Content-Type, Accept\")\r\n      next()\r\n    })\r\n// Default error handling:\r\n    app.use(promiseWraper())\r\n    app.use(( err,req,res,next ) => {\r\n      res.promise(Promise.reject(err))\r\n    })\r\n  // Check user-authentication:\r\n    //app.use(( req,res,next ) => {\r\n    //  // Check User middleware:\r\n    //  next()\r\n    //})\r\n\r\n  // Attach Dependencies to requiest:\r\n  // Create Parent Scope for future User-state:\r\n    app.use(( req,res,next ) => {\r\n      req.container = container.createScope()\r\n      next()\r\n    })\r\n\r\n  // Provide API with Repo-Controlers:\r\n    const tmlnAPI = _api.tmln_api.bind(null,{repo})\r\n    const usrAPI = _api.usr_api.bind(null,{repo})\r\n\r\n  // Inversion of Control\r\n  // Provide API with Application Server\r\n    usrAPI(app)\r\n    tmlnAPI(app)\r\n\r\n  // Error handling:\r\n    app.use(( err,req,res,next ) => {\r\n      //reject(new Error('!Some application error: ',err))\r\n      res.status(500).json({error: {global: err.message}})\r\n      next()\r\n    })\r\n\r\n    const server = app.listen(port, () => {\r\n      resolve(server)\r\n    })\r\n  })\r\n}\r\n\r\nexport default Object.assign({}, { start })\r\n"],"file":"index.js"}