{"version":3,"sources":["../../src/models/index.js"],"names":["schemas","Object","assign","user","joi","schemaValidator","object","type","Promise","resolve","reject","Error","validate","error","value"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA,IAAMA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB;AAACC,EAAAA,IAAI,EAAC,2BAAMC,eAAN;AAAN,CAAjB,CAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAQC,IAAR,EAAiB;AACvC,SAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;AAEtC,QAAI,CAACJ,MAAL,EAAcI,MAAM,CAAC,IAAIC,KAAJ,mCAAD,CAAN;AACd,QAAI,CAACJ,IAAL,EAAYG,MAAM,CAAC,IAAIC,KAAJ,mBAAqBJ,IAArB,uBAAD,CAAN;;AAEZ,gCAAwBP,OAAO,CAACO,IAAD,CAAP,CAAcK,QAAd,CAAuBN,MAAvB,CAAxB;AAAA,QAAQO,KAAR,yBAAQA,KAAR;AAAA,QAAcC,KAAd,yBAAcA,KAAd;;AAEA,QAAGD,KAAH,EAAUH,MAAM,CAAC,IAAIC,KAAJ,mBAAqBJ,IAArB,WAAD,CAAN;AAEVE,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAVM,CAAP;AAWD,CAZD,C,CAcA;;;eACeb,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB;AAAEU,EAAAA,QAAQ,EAAEP;AAAZ,CAAjB,EAA+C;AAAEF,EAAAA,IAAI,EAAE,2BAAMC,eAAN;AAAR,CAA/C,C","sourcesContent":["import joi from 'joi'\r\nimport _user from './user.model.js'\r\n\r\n//const user = _user(joi)\r\n//console.log('Model user: ',user)\r\n//const schemas = Object.create({user})//NOT WORKING??\r\nconst schemas = Object.assign({},{user:_user(joi)})\r\n\r\nconst schemaValidator = (object,type) => {\r\n  return new Promise( (resolve,reject) => {\r\n\r\n    if( !object ) reject(new Error(`Missing schema data to validate`))\r\n    if( !type ) reject(new Error(`Missing ${type} data to validate`))\r\n\r\n    const { error,value } = schemas[type].validate(object)\r\n\r\n    if(error) reject(new Error(`Invalid ${type} data`))\r\n\r\n    resolve(value)\r\n  })\r\n}\r\n\r\n//export default Object.create({validate: schemaValidator, schemas}) NOT WORKING??\r\nexport default Object.assign({},{ validate: schemaValidator },{ user: _user(joi) })\r\n"],"file":"index.js"}